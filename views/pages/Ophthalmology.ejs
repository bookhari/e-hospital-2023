<!--Group 2 juvenile myopia prediction; Jesse and Charlie BMG5111-->
<!DOCTYPE html>
<html>
  
<head>
  <title>Patient Information Form</title>
  <meta charSet="utf-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Register | E-Hospital</title>
  <meta name="author" content="E-Hospital" />

  <meta property="og:url" content="register.html" />
  <meta property="og:site_name" content="E-Hospital" />
  <meta property="og:title" content="E-Hospital" />
  <meta property="og:type" content="website" />
  <meta property="og:image" content="https://img1.wsimg.com/isteam/stock/Ddj9aVd" />
  <meta property="og:locale" content="en_CA" />
  <link href="css/login.css" rel="stylesheet" type="text/css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.3/jquery.min.js"></script>

  <style>
    table, th, td {
      border:1px solid black;
    }
  </style>
    
  <script>
     function generate(){   
      let phoneNumber = document.getElementById('phoneID').value;
      // Get the patient records
      $.ajax({
        url: "/healthTestRetrieveByPhoneNumber",
        type: 'POST',
        data: {
          phoneNumber: phoneNumber, 
          recordType: "eye_test" // the table name that stores the record
        },
        //check the data to make sure it is there and pass it to convert()
        success: function(data) {
            if (data.error) {
                alert(JSON.stringify(data.error));
            } else {
                let x = convert(data.success);
                storePrediction();
                predict(x);
            }
        },
        error: function(xhr, textStatus, errorThrown) {
          // Handle error response from server
          alert(textStatus + ': ' + errorThrown);
        }
        
      });
    };

    //Takes the information of the patient and stores it as a list
    function convert(data) {
        const record = data[0];
        if (!data) {
            alert("No data received");
            return;
        } else {
            //console.log(record);
            myList = Object.values(record);
            //console.log(myList);
            createTableFromDict(record);
            return(myList);
        }

    }

//runs the model with the selected patient's information
    function predict(data) {
        let announce;
        const finalInput = document.getElementById("diagnose");
        console.log(jm_risk(myList));
        if (jm_risk(myList) === 1) {
            announce = "Patient is at risk of developing myopia";
        } else {
            announce = "Patient is not at risk of developing myopia";
        };
        finalInput.value = '' + announce;
        
    }

    //Create table to display patient information
    function createTableFromDict(dict) {
        let table = document.createElement('table');
        //table.style.marginLeft = "-100px";
        let headerRow = table.insertRow();
        for (let key in dict) {
            let headerCell = document.createElement('th');
            headerCell.style.maxWidth = "140px";
            headerCell.innerHTML = key;
            headerRow.appendChild(headerCell);
        }
        let dataRow = table.insertRow();
        for (let key in dict) {
            let dataCell = document.createElement('td');
            dataCell.style.maxWidth = "140px";
            dataCell.innerHTML = dict[key];
            dataRow.appendChild(dataCell);
        }
        let container = document.querySelector('.container');
        container.appendChild(table);
    }

    //Fill in values for record Type and date
    function tableFill(value, date) {
        let thRecord = document.getElementById('recordType');
        let thDate = document.getElementById('recordDate');
        thDate.innerText = `Record Date: ${date}`;
        if (value === 0) {
            thRecord.innerText = "Record Type: Non-myopic" ;
        } else {
            thRecord.innerText = "Record Type: Myopic";
        }
        let container = document.querySelector(".container")
        //container.appendChild(table)
    }
    //decision tree prediciton model 0=benign, 1=malignant
    function jm_risk(ins) {
        if (ins[1] <= 0.667) {
            if (ins[1] <= 0.285) {
                if (ins[2] <= 23.59) {
                    return 1;
                }
                else {
                    if (ins[3] <= 3.69) {
                        return 0;
                    }
                    return 1;
                }
            }
            else{
                if (ins[6] <= 19.773){
                    if (ins[7] <= 0.072){
                        return 0;
                    }
                    return 1;
                }         
                else {
                    if (ins[1] <= 0.294) {
                        return 1;
                    }
                    return 0;
                }
            }
        }
        else{
            if (ins[10] <= 1.714){
                if (ins[5] <= 14.724){
                    return 1;
                }
                else {
                    if (ins[9] <= 0.5) {
                        return 0;
                    }
                    return 1;
                }
            }
            else{
                if (ins[1] <= 0.723){
                    if (ins[3] <= 3.616){
                        return 0;
                    }
                    return 1;
                }
                return 0;
            }
        }
    }



    // Store the prediction result to the database
    function storePrediction() {
      // Set phone number and the current date
      let today = new Date();
      const offset = today.getTimezoneOffset();
      today = new Date(today.getTime() - (offset*60*1000)).toISOString();
      // Store to the database
      $.ajax({
        url: "/updateDisease",
        type: 'POST',
        data: {
          phoneNumber: document.getElementById('phoneID').value,
          disease: "juvenile_myopia", 
          date: today,
          prediction: jm_risk(myList),
          accuracy: null,
          recordType: "eye_test", 
          recordId: 2,
        },
        success: function(data) {
          // console.log(data);
          const prediction = jm_risk(myList);
          const recordDate = today;
          tableFill(prediction, recordDate);
          data.error ? alert(JSON.stringify(data.error)) : alert(data.success);
        },
        error: function(xhr, textStatus, errorThrown) {
          // Handle error response from server
          alert(textStatus + ': ' + errorThrown);
        }
      });
    }
  </script>
  
  <%- include('../partials/header') -%>
    <link href="/css/oncology.css" rel="stylesheet" >
</head>
<body>
  <div class="words" id="words">
   
    <h1>Juvenile Myopia Risk Prediction</h1>

    <h3 style="margin-top: 30px;">Patient Information</h3>
   
  </div>
  <div class="container" style="padding-top: 40px;">
    <table id="recordList" style="width:60%">
      <tr>
        <th id="recordType">Record</th>
        <th id="recordDate">Record Date</th>
      </tr>

    </table>
  </div>
  <div> 

    <div class="outer">
        
        <div class="result-box" style = "padding: 30px 15px; width: 1000px; margin-left: 65.5px; margin-bottom: -50px;">
            <label for="diagnose">Test Result:</label>
            <br> 
            <input type="text" id="diagnose" name="diagnose" placeholder="Result" \
            style="border: 2px solid #ccc; border-radius: 4px; padding: 10px 10px;  width: 400px; font-size: 15px; font-weight: 500;
            color: black;
            animation: fadeIn 1s ease-in;box-sizing: border-box;" disabled="disabled">
        </div>

       <div class="result-box" style = "padding: 30px 15px; width: 1000px; margin-left: 65.5px;">
            <label for="diagnose">Patient Phone Number</label>
            <br> 
            <input type="text" id="phoneID" placeholder="Phone Number" style="border: 2px solid #ccc; border-radius: 4px;
            color: black; animation: fadeIn 1s ease-in; box-sizing: border-box;">
            <button onclick="generate()">Predict</button>
        </div>
    </div>
    </div>
    <footer>
  <%- include('../partials/footer-new') -%>
  
  </footer>
  </div> 
  

</body>
</html>

