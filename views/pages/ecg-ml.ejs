/* TaskName, adding database call (Mohamed Yassine Bouhamidi) GroupNumber 5, BMG5109 Medical Diagnostics Engineering, 2023 */
<!DOCTYPE html>
<html lang="en-CA">

<head>
    <meta http-equiv="content-type" content="text/html;charset=utf-8" />
    <%- include('../partials/header') -%>
        <meta charSet="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <title>ECG Arrhythmia Diagnostics | E-Hospital</title>
        <meta name="author" content="E-Hospital" />
        <meta property="og:url" content="dashboard.html" />
        <meta property="og:site_name" content="E-Hospital" />
        <meta property="og:title" content="E-Hospital Dashboard" />
        <meta property="og:type" content="website" />
        <meta property="og:image" content="https://img1.wsimg.com/isteam/stock/Ddj9aVd" />
        <meta property="og:locale" content="en_CA" />
        <style>
            .spinner {
                border: 16px solid #f3f3f3;
                /* Light grey */
                border-top: 16px solid #3498db;
                /* Blue */
                border-radius: 50%;
                margin-left: 50%;
                width: 120px;
                height: 120px;
                align-items: center;
                justify-content: center;

                animation: spin 2s linear infinite;
            }

            @keyframes spin {
                0% {
                    transform: rotate(0deg);
                }

                100% {
                    transform: rotate(360deg);
                }
            }
        </style>
</head>

<body>
    <header>
        <%- include('../partials/header') -%>
    </header>
    <main>
        <div class="container">
            <div class="row">
                <div class="col-md-6">
                    <h1>ECG Arrhythmia Diagnostics</h1>
                    <br>
                    <img src="images/ecg_ml.jpg" alt="Doctor using tablet to diagnose medical technology" width="70%">
                    <form id="upload-form" onsubmit="button_pressed(event)">
                        <br>
                        <div class="form-group">
                            <label for="csv-file">Select Patient ID:</label>
                            <input id="csv-file" name="csv-file" type="text" placeholder="0000" required="required"
                                pattern="[0-9]{10}">
                        </div>
                        <button id="submitted" type="submit" class="btn btn-primary"
                            style="background-color: black; color: white;">Submit</button>
                    </form>
                    <br>
                </div>
                <div class="col-md-6">
                    <br>
                    <br>
                    <h4>Our problem statement:</h4>
                    <br>
                    <div id="project statement">
                        <p>
                            Overall, diagnosing arrhythmia can be challenging for healthcare professionals and requires
                            careful
                            interpretation of electrocardiogram (ECG) signals and other patient data, as well as
                            knowledge of the
                            underlying causes and risk factors for arrhythmia such as symptoms variability, ECG
                            variability, Co-occuring
                            conditions, limited diagnostic tools and heart complexity. The aim of this project is to
                            develop an artificial
                            intelligence (AI) system that can accurately diagnose arrhythmia using ECG signals.
                        </p>
                    </div>
                </div>
                <div class="col-md-12" style="align-items: center;
                justify-content: center;">
                    <br>
                    <div id="spinner" class="spinner" style="display:none;"></div>
                    <br>
                    <div id="plot"></div>
                </div>
                <div class="col-md-12" style="align-items: center;
                justify-content: center;">
                    <br>
                    <form id="save-form" onsubmit="save_pressed(event)" style="display:none;">
                        <div class="form-group">
                            <label> Save patient's result:</label>
                            <br>
                            <label for="phone-number">Phone Number:</label>
                            <input type="text" id="phoneNumber" name="phone_number" placeholder="0000"
                                required="required" pattern="[0-9]{10}">
                            <label for="disease">Disease:</label>
                            <input type="text" id="disease" name="disease" required placeholder="arrhythmia">

                            <label for="date">Date:</label>
                            <input type="datetime-local" id="date" name="date" required
                                placeholder="2023-03-20 10:00:00">

                            <label for="prediction">Prediction:</label>
                            <input type="text" id="prediction" name="prediction" required>

                            <br>

                            <label for="accuracy">Accuracy:</label>
                            <input type="text" id="accuracy" name="accuracy" required>

                            <label for="record-type">Record Type:</label>
                            <input type="text" id="recordType" name="record_type" placeholder="ecg" required>

                            <label for="record-id">Record ID:</label>
                            <input type="text" id="recordId" name="record_id" placeholder="000" required="required"
                                pattern="[0-9]{3}">
                        </div>
                        <button id="submitted" type="submit" class="btn btn-primary"
                            style="background-color: black; color: white;">Submit</button>

                        <br>

                        <!-- <label for="csv-file">Save Patient ID:</label>
                        <input id="csv-file" name="csv-file" type="text" placeholder="0000" required="required"
                            pattern="[0-9]{10}"> -->
                    </form>
                    <br>
                </div>
                <div class="col-md-12" style="align-items: center;
                justify-content: center;">
                    <label id="event-success" style="display: none;">Successfully saved the results to the patient's
                        record.
                    </label>
                </div>
            </div>
        </div>
    </main>
    <footer>
        <%- include('../partials/footer-new') -%>
    </footer>
    <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/PapaParse/5.3.0/papaparse.min.js"></script>
    <script type="text/javascript">
        let data = [];
        let predictions = "";

        function button_pressed(event) {
            event.preventDefault();

            const nameInput = document.querySelector("input");

            nameInput.addEventListener("input", () => {
                nameInput.setCustomValidity("");
                nameInput.checkValidity();
            });

            nameInput.addEventListener("invalid", () => {
                if (nameInput.value === "") {
                    nameInput.setCustomValidity("Enter the patient ID!");
                } else {
                    nameInput.setCustomValidity(
                        "Patient ID can only contain numbers and has to be of size 10. Try again!"
                    );
                }
            });


            const x = document.getElementById("csv-file").value;
            fetchData(x);
        }

        function fetchData(x) {
            const spinner = document.getElementById('spinner');
            spinner.style.display = 'block';

            fetch("/healthTestRetrieveByPhoneNumber/", {
                method: "POST",
                mode: "cors",
                credentials: "same-origin",
                redirect: "follow",
                referrerPolicy: "no-referrer",
                headers: {
                    'Content-Type': 'application/json'

                },
                body: JSON.stringify({ "phoneNumber": x, "recordType": "ecg" }),
            })
                .then(response => {
                    if (response.ok) {
                        return response.json()
                    } else {
                        throw new Error('Request failed.' + error);
                    }
                })
                .then(blob => {
                    console.log("db call successful");
                    spinner.style.display = 'none';
                    postData(blob["success"]["0"]["ECG_complex"].match(/\d+(?:\.\d+)?/g).map(Number));
                }
                )
                .catch(error => {
                    console.error(error);
                });
        }




        function postData(data) {
            const spinner = document.getElementById('spinner');
            spinner.style.display = 'block';

            fetch('https://ecg-ml-api.onrender.com/predict/', {
                method: 'POST',
                mode: "cors",
                credentials: "same-origin",
                redirect: "follow",
                referrerPolicy: "no-referrer",
                headers: {
                    'Content-Type': 'application/json'

                },
                body: JSON.stringify({ "data": data }),
            })
                .then(response => {
                    if (response.ok) {
                        return response.json()
                    } else {
                        throw new Error('Request failed.' + error);
                    }
                })
                .then(blob => {
                    console.log("success, going to the plotting");
                    spinner.style.display = 'none';
                    plotData(blob["result"], data);
                }
                )
                .catch(error => {
                    console.error(error);
                });
        }

        function NewArray(size) {
            var x = [];
            for (var i = 0; i < size; ++i) {
                x[i] = i * 10;
            }
            return x;
        }


        function plotData(response, data) {
            let exp = "";
            if (response == "N") {
                exp = "Normal"
            }
            if (response == "S") {
                exp = "Supra-ventricular premature"
            }
            if (response == "V") {
                exp = "Ventricular escape"
            }
            if (response == "F") {
                exp = "Fusion of ventricular and normal"
            }
            if (response == "Q") {
                exp = "Unclassifiable"
            }

            var trace1 = {
                x: NewArray(data.length),
                y: data,
                mode: "lines",
                type: "scatter"
            };
            var layout = {
                title: 'ECG diagnostic result: ' + exp,
                xaxis: { range: [-10, 1700], title: "Time (ms)" },
                yaxis: { range: [-0.1, 1.1], title: "Voltage (mV)" },
            };
            var plotData = [trace1];
            Plotly.newPlot('plot', plotData, layout);
            const save_form = document.getElementById('save-form');
            save_form.style.display = 'block';
            const prediction_form = document.getElementById('prediction');
            prediction_form.value = exp;
        }

        function save_pressed(event) {
            event.preventDefault();

            const x = document.getElementById("csv-file").value;
            const date = document.getElementById("date").value;
            const prediction = document.getElementById('prediction');
            const accuracy = document.getElementById("accuracy").value;
            const type = document.getElementById("recordType").value;
            const id = document.getElementById("recordId").value;

            fetch("/updateDisease", {
                method: "POST",
                mode: "cors",
                credentials: "same-origin",
                redirect: "follow",
                referrerPolicy: "no-referrer",
                headers: {
                    'Content-Type': 'application/json'

                },
                body: JSON.stringify({ "phoneNumber": x, "disease": "arrhythmia", "date": date, "prediction": prediction, "accurary": accuracy, "recordType": type, "recordId": id }),
            })
                .then(response => {
                    if (response.ok) {
                        return response.json()
                    } else {
                        throw new Error('Request failed.' + error);
                    }
                })
                .then(blob => {
                    console.log("success, saving result");
                    const save_form = document.getElementById('event-success');
                    save_form.style.display = 'block';
                }
                )
                .catch(error => {
                    console.error(error);
                });
        }

    </script>
</body>

</html>