<!DOCTYPE html>
<html lang="en-CA">
<!-- Mirrored from e-hospital.godaddysites.com/register by HTTrack Website Copier/3.x [XR&CO'2014], Tue, 01 Nov 2022 05:04:01 GMT -->
<!-- Added by HTTrack -->
<meta http-equiv="content-type" content="text/html;charset=utf-8" /><!-- /Added by HTTrack -->

<head>
    <meta charSet="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Services | Cancer Prediction</title>
    <meta name="author" content="E-Hospital" />

    <meta property="og:url" content="register.html" />
    <meta property="og:site_name" content="E-Hospital" />
    <meta property="og:title" content="E-Hospital" />
    <meta property="og:type" content="website" />
    <meta property="og:image" content="https://img1.wsimg.com/isteam/stock/Ddj9aVd" />
    <meta property="og:locale" content="en_CA" />
    <link rel="stylesheet" href="/css/style-starter.css">
    <link rel="stylesheet" href="/css/patients.css">
    <!-- <link href="css/login.css" rel="stylesheet" type="text/css"> -->


</head>

<style>
    body {
        background-color: #fff;
        color: #fff;
        font-family: Arial, sans-serif;
    }

    h1 {
        text-align: center;
    }

    form {
        margin-bottom: 20px;
        display: flex;
        flex-direction: column;
        align-items: center;
        background-color: #fff;
        padding: 20px;
        border-radius: 5px;
    }

    .container {
        max-width: 500px;
        margin: 0 auto;
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    input[type="file"] {
        border: none;
        background-color: #555;
        color: #fff;
        padding: 10px;
        border-radius: 5px;
        font-size: 1.2em;
    }

    button[type="submit"] {
        border: none;
        cursor: pointer;
        height: 20%;
        display: flex;
        justify-content: center;
        background: linear-gradient(-135deg, #747474, rgb(0, 0, 0));
        color: white;
        padding: 10px 20px;
        border-radius: 25px;
        font-size: 16px;
        max-width: 400px;
        width: 300px;

    }

    button[type="submit"]:hover {
        background-color: #555;
    }

    #response {
        padding: 20px;
        background-color: #fff;
        border-radius: 5px;
        white-space: pre-wrap;
        color: #fff;
        border-color: #000000;
        border-width: 20;
        background-color: #747474;
    }
</style>

<%- include('../partials/header') -%>

    <div class="content">
        <h1>Cancer Detection</h1>
        <form id="upload-form">
            <label for="file-input">Choose a file to upload:</label>
            <input type="file" id="file-input" name="file-input">
            <br>
            <br>
            <div class="black-button">
                <button type="submit">Submit</button>
            </div>

        </form>
        <div>
            <h3>Result:</h3>
            <br>
            <div id="response">No data</div>
        </div>


    </div>

    <script>
        const form = document.getElementById('upload-form');
        const responseDiv = document.getElementById('response');
        const Bladder = document.getElementById('bladder');

        form.addEventListener('submit', async (event) => {
            event.preventDefault();

            const fileInput = document.getElementById('file-input');
            const file = fileInput.files[0];
            if (!file) {
                responseDiv.textContent = 'Please choose a file to upload.';
                return;
            }

            const reader = new FileReader();
            reader.onload = async () => {
                try {
                    const data = JSON.parse(reader.result);

                    const input = data;
                    const response = await fetch('https://tcgacancerapi.herokuapp.com/ml/mlp_model', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(data)
                    });

                    const result = await response.json();
                    let output = '';
                    for (const [key, value] of Object.entries(result)) {
                        output += `${key}: ${value.toFixed(2)}\n`;
                    }
                    responseDiv.textContent = output.trim();

                } catch (error) {
                    responseDiv.textContent = 'Please upload valid file ';
                }
            };

            reader.readAsText(file);
        });

    </script>

</html>