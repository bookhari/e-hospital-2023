/* Enrico, Apeksha, Tarin
<!DOCTYPE html>
<html lang="en-CA">
<meta http-equiv="content-type" content="text/html;charset=utf-8" />
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.14.0/css/all.min.css">

<head>
  <meta charSet="utf-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>E-Hospital: Brain Diagnostics</title>
  <meta name="author" content="E-Hospital" />
  <meta property="og:url" content="brain.html" />
  <meta property="og:site_name" content="E-Hospital" />
  <meta property="og:title" content="E-Hospital" />
  <meta property="og:type" content="website" />
  <meta property="og:image" content="https://img1.wsimg.com/isteam/stock/Ddj9aVd" />
  <meta property="og:locale" content="en_CA" />
  <link href="css/login.css" rel="stylesheet" type="text/css">
  <link href="css/brain-diagnostics.css" rel="stylesheet" type="text/css">

  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.3/jquery.min.js"></script>
  <style>
    table {
      border-collapse: collapse;
      width: 100%;
      margin-bottom: 20px;
    }
    th, td {
      padding: 12px;
      text-align: left;
      border: 1px solid #ddd;
    }
    th {
      background-color: #39c7e3;
      color: white;
    }
    tr:nth-child(even) {
      background-color: #f2f2f2;
    }
  </style>
  <script>
    var recordList = [];

    $(document).ready(function() {
      // retrived phone number form url
      let params = (new URL(document.location)).searchParams;
      let phoneNumber = params.get("phoneNumber");

      // Get the patient records
      $.ajax({
        url: "/imageRetrieveByPhoneNumber",
        type: 'POST',
        data: {
          phoneNumber: phoneNumber, 
          recordType: "MRI_Brain" // the table name that stores the record
        },
        success: function(data) {
          // console.log(data);
          data.error ? alert(JSON.stringify(data.error)) : display(data.success);
        },
        error: function(xhr, textStatus, errorThrown) {
          // Handle error response from server
          alert(textStatus + ': ' + errorThrown);
        }
      });
    });
    
    // Display the patient records to the front end that allows doctor selected specific record for diagnose
    function display(data) {
      recordList = data;
      if (recordList.length <= 0) {
        alert("This patient has no record, please do the MRI scan of the brain.");
        return;
      }
      console.log(recordList);
      let list = document.getElementById("recordList");
      
      // Display each record
      for (let i = 0; i < recordList.length; ++i) {
        let tr = document.createElement("tr");
        let image = document.createElement("td");
        // Extract the image data from the buffer
        const imageData = recordList[i].file.buffer;

        // Create a data URL from the image data
        const dataURL = `data:image/jpeg;base64,${imageData}`;

        // Create an img element and set its src attribute to the data URL
        const img = document.createElement('img');
        img.src = dataURL;
        img.width = 150;
        img.height = 150;
        image.appendChild(img)
        
        let recordDate = document.createElement("td");
        recordDate.innerHTML = recordList[i].RecordDate;
        let action = document.createElement("td");
        let button = document.createElement("input");
        button.type = "button";
        button.value = "Diagnose";
        button.index = i;
        button.setAttribute("onclick", "predict(this.index)")
        action.appendChild(button);
        
        tr.appendChild(image);
        tr.appendChild(recordDate);
        tr.appendChild(action);
        list.appendChild(tr);
      }
    }

    // Send the image to the ML api for the prediction
    async function predict(index) {
      console.log(recordList[index]);

      // Prepare submit data
      const form = new FormData();
      const base64Response = await fetch(`data:image/jpeg;base64,${recordList[index].file.buffer}`);
      const blob = await base64Response.blob();
      form.append('image', blob, recordList[index].file.originalname);

      // Send to the ML API
      $.ajax({
        url: "/connectionTesting",
        type: 'POST',
        enctype: 'multipart/form-data',
        data: form,
        processData: false,
        contentType: false,
        cache: false,
        success: function(data) {
          // console.log(data);
          //data.error ? alert(JSON.stringify(data.error)) : alert(JSON.stringify(data));
          storePrediction(data, recordList[index]._id);
          console.log(`Succesful response ${JSON.stringify(data)}`);
          console.log(`Message is: ${JSON.stringify(data)}`);
          var st1=JSON.stringify(data);
          str= st1.replace(/[\[\]""]+/g,''); 
          str2 = str.replace(/[{}()]/g, '').replace(/[\[\]""]+/g,'');
          console.log(str2);         
          console.log(str2);        
          $("#diagnose").val(str2);
        },
        error: function(xhr, textStatus, errorThrown) {
          // Handle error response from server
          alert(textStatus + ': ' + errorThrown);
        }
      });
    }

    // Store the prediction result to the database
    function storePrediction(result, id) {
      console.log(result);
      
      // Retrieved phone number and the current date
      let params = (new URL(document.location)).searchParams;
      let phoneNumber = params.get("phoneNumber");
      let today = new Date();
      const offset = today.getTimezoneOffset();
      today = new Date(today.getTime() - (offset*60*1000)).toISOString();

      // Store to the database
      $.ajax({
        url: "/updateDisease",
        type: 'POST',
        data: {
          phoneNumber: phoneNumber,
          disease: "brain_tumor", // the table name that stores the prediction result
          date: today,
          prediction: result.prediction,
          accuracy: result.accuracy, // can be null if not provided
          recordType: "MRI_Brain", // can be null if no record is used for the ML prediction
          recordId: id // can be null if no record is used for the ML prediction
        },
        success: function(data) {
          // console.log(data);
          data.error ? alert(JSON.stringify(data.error)) : alert(data.success);
        },
        error: function(xhr, textStatus, errorThrown) {
          // Handle error response from server
          alert(textStatus + ': ' + errorThrown);
        }
      });
    }
  </script>
  <%- include('../partials/header') -%>

</head>

<body class="x x-fonts-fjalla-one">
  <div id="layout-84-e-67726-d-5-dd-4591-ba-17-0-d-8628-d-44-ded" class="layout layout-layout layout-layout-layout-19 locale-en-CA lang-en">
    <div data-ux="Page" id="page-5333" class="x-el x-el-div x-el c1-1 c1-2 c1-3 c1-4 c1-5 c1-6 c1-7 c1-8 c1-9 c1-a c1-b c1-c c1-d c1-e c1-f c1-g c1-1 c1-2 c1-b c1-c c1-d c1-e c1-f c1-g">
      <div data-ux="Block" class="x-el x-el-div page-inner c1-1 c1-2 c1-b c1-c c1-d c1-e c1-f c1-g">
        <div data-ux="Widget" role="region" id="b639448c-0c69-4bc5-9a31-6dbcdc7176cf" class="x-el x-el-div x-el c1-1 c1-2 c1-3 c1-b c1-c c1-d c1-e c1-f c1-g c1-1 c1-2 c1-b c1-c c1-d c1-e c1-f c1-g">
          <section data-ux="Section" class="x-el x-el-section c1-1 c1-2 c1-3 c1-i c1-j c1-3o c1-b c1-c c1-m c1-n c1-d c1-e c1-f c1-g">
            <div data-ux="Container" class="x-el x-el-div c1-1 c1-2 c1-p c1-q c1-r c1-s c1-t c1-b c1-c c1-61 c1-d c1-62 c1-e c1-63 c1-f c1-64 c1-g">
              <h1 role="heading" aria-level="1" data-ux="SectionHeading" data-aid="CONTACT_SECTION_TITLE_REND" data-promoted-from="2" data-order="0" data-typography="HeadingBeta" class="x-el x-el-h1 c1-1 c1-1x c1-1b c1-1c c1-6w c1-3j c1-3k c1-2e c1-6x c1-1v c1-1y c1-6a c1-1j c1-43 c1-6y c1-6b c1-6z c1-6c c1-6d c1-6e">

                <!--heading-->
                <br>
                <br>
                <span data-ux="Element" class="">Brain Diagnostics</span>
              </h1>
              <div data-ux="Content" class="x-el x-el-div c1-1 c1-2 c1-b c1-c c1-d c1-e c1-f c1-g">
                <div data-ux="Element" id="bs-7" class="x-el x-el-div c1-1 c1-2 c1-b c1-c c1-d c1-e c1-f c1-g">
                  <div data-ux="Grid" class="x-el x-el-div c1-1 c1-2 c1-12 c1-74 c1-75 c1-76 c1-2e c1-77 c1-2f c1-78 c1-b c1-c c1-79 c1-7a c1-7b c1-7c c1-d c1-e c1-f c1-g">
                    <div data-ux="GridCell" class="x-el x-el-div c1-1 c1-2 c1-74 c1-7d c1-7e c1-7f c1-t c1-28 c1-7g c1-2a c1-7h c1-b c1-c c1-7i c1-7j c1-7k c1-7l c1-7m c1-7n c1-7o c1-d c1-7p c1-7q c1-7r c1-e c1-f c1-g">
                      <div data-ux="Block" data-aid="CONTACT_FORM_CONTAINER_REND" class="x-el x-el-div c1-1 c1-2 c1-1w c1-1v c1-b c1-c c1-d c1-e c1-f c1-g">
                        <form id="patientForm" data-ux="Form" action="/recordUpdate" method="post" enctype="multipart/form-data" class="x-el x-el-form c1-1 c1-2 c1-2f c1-b c1-c c1-d c1-e c1-f c1-g">

                          <!-- table -->
                          <div class="container" style="padding-top: 40px;">
                            <table id="recordList" style="width:100%">
                              <tr>
                                <th>Record</th>
                                <th>Record Date</th>
                                <th>Action</th>
                              </tr>
                        
                            </table>
                          </div>

                          <div class="result-box">
                            <label for="diagnose">Test Result</label>
                            <br> 
                            <input type="text" id="diagnose" name="diagnose" placeholder="Result" \
                            style="border: 2px solid #ccc; border-radius: 4px; padding: 10px 10px;  width: 100%; font-size: 15px; font-weight: 500;
                            color: #2783ae;
                            animation: fadeIn 1s ease-in;box-sizing: border-box; 
                             margin-top: 10px;" disabled="disabled" required>
                          </div>

                      </div>
                    </div>
                    </form>
                  </div>
                </div>
              </div>
            </div>
        </div>
        <footer>
          <%- include('../partials/footer-new') -%>
        </footer>
        </section>
      </div>
    </div>
  </div>
  </div>
</body>

</html>